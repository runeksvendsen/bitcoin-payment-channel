name:         bitcoin-payment-channel
version:      '1.2.0.0'
synopsis:     Instant, two-party Bitcoin payments
category:     Bitcoin, Finance, Network
author:       Rune K. Svendsen <runesvend@gmail.com>
maintainer:   Rune K. Svendsen <runesvend@gmail.com>
license:      OtherLicense
license-file: LICENSE
homepage:     https://github.com/runeksvendsen/bitcoin-payment-channel
git:          git://github.com/runeksvendsen/bitcoin-payment-channel.git
bug-reports:  https://github.com/runeksvendsen/bitcoin-payment-channel/issues
stability:    experimental

description: ! 'A Bitcoin payment channel allows secure and instant transfer of bitcoins
  from one party to another. Payments are created and verified in less than a millisecond
  (plus network latency), and cannot be double spent, as the receiver of funds is
  defined during channel setup.
  When the channel is closed, the settlement transaction transfers the appropriate
  value to each party, thus paying the Bitcoin transaction fee only once, regardless of the number
  of payments made over the channel.

  The channel setup procedure is trustless, because the funding party - after the
  chosen expiration date - is able to reclaim the bitcoins used to fund the channel,
  in case the receiving party goes missing.

  This library implements a type of payment channel where channel setup
  is safe from transaction ID malleability, and value transfer is uni-directional
  (one party sends and the other party receives) (CHECKLOCKTIMEVERIFY-style).'


default-extensions:
- OverloadedStrings
- RecordWildCards
- MultiParamTypeClasses
- TypeSynonymInstances
- FlexibleInstances
- FlexibleContexts
- FunctionalDependencies
- KindSignatures
- DataKinds
- ScopedTypeVariables
- DeriveGeneric
- DeriveFunctor

dependencies:
- base                >=4.7     && <5
- haskoin-core        >=0.4.0   && <0.5.0
- base16-bytestring   >=0.1.0   && <0.2.0
- bytestring          >=0.10.0  && <0.11.0
- cereal              >=0.5.0   && <0.6.0
- errors              >=2.0.0   && <2.2.0
- hexstring           >=0.11.0  && <0.12.0
- text                >=1.2.0   && <1.3.0
- time                >=1.5.0   && <1.7.0
- aeson               >=0.11.0  && <1.1
- scientific          >=0.3.0   && <0.4.0
- string-conversions  >=0.4     && <0.5
- tagged              >=0.8     && <1.0
- semigroups          >=0.17    && <0.19
- QuickCheck          >=2.8     && <2.10
- monad-time          >=0.2     && <1.0
- deepseq             >=1.3     && <1.5
- rbpcp-api
- blockchain-restful-address-index-api
- hspec
- data-default-class
- either
- transformers
- mtl

library:
  source-dirs: src
  ghc-options: -Wall
  exposed-modules:
  - PaymentChannel
  - PaymentChannel.Types
  - PaymentChannel.Util
  - PaymentChannel.Test
  - PaymentChannel.RBPCP.Parse
  - Bitcoin.BIP32
  - Bitcoin.BIP32.Types
  - Bitcoin.BIP32.DetDerive
  - Bitcoin.Util
  - Bitcoin.Internal.Util
  - Bitcoin.Signature
  - Bitcoin.SpendCond.Cond
  - Bitcoin.SpendCond.Util

tests:
  test-all:
    main:        Spec.hs
    source-dirs: test
    ghc-options:
    - -Wall
    - -dcore-lint
    - -debug
    dependencies:
    - bitcoin-payment-channel
    - hspec-discover
    - base64-bytestring
    - test-framework
    - test-framework-quickcheck2
    - tf-random
    - random
    - mtl

benchmarks:
  bench:
    main:         Main.hs
    source-dirs:  bench
    dependencies:
    - criterion
    - bitcoin-payment-channel

